name: check for caddy and plugin updates

on:
  # Possibility to run it manually
  workflow_dispatch:
    inputs:
      trigger_all_builds:
        description: build all images
        default: false
        type: boolean
        required: true
  push:
    paths:
      - ".github/workflows/main-workflow.yml"
      - ".github/workflows/build-image.yml"
      - ".github/workflows/update-commit.yml"
      - "Dockerfile-desec"
      - "Dockerfile-desec-alpine"
      - "commit-check.sh"
  # Automated
  schedule:
    # Run Every hour
    - cron: "0 * * * *"

jobs:
  check-for-new-caddy-release:
    runs-on: ubuntu-latest
    outputs:
      caddy: ${{ steps.git-check.outputs.caddy-out-of-date }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/caddyserver/caddy/releases/latest | \
          jq -r ".tag_name" > git-hashes/caddy-release.txt

      - name: Check for modified files
        id: git-check
        run: echo "caddy-out-of-date=$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")" >> $GITHUB_OUTPUT

  update-caddy-build-version:
    runs-on: ubuntu-latest
    needs: check-for-new-caddy-release
    if: ${{ needs.check-for-new-caddy-release.outputs.caddy == 'true' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/caddyserver/caddy/releases/latest | \
          jq -r ".tag_name" > git-hashes/caddy-release.txt

      - name: Commit latest build version
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
          git add git-hashes/caddy-release.txt
          git commit -am "update current caddy build version"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  check-for-plugin-updates:
    runs-on: ubuntu-latest
    needs: check-for-new-caddy-release
    outputs:
      desec: ${{ steps.desec.outputs.desec-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      cloudflare: ${{ steps.cloudflare.outputs.cloudflare-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      duckdns: ${{ steps.duckdns.outputs.duckdns-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      route53: ${{ steps.route53.outputs.route53-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      namecheap: ${{ steps.namecheap.outputs.namecheap-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      digitalocean: ${{ steps.digitalocean.outputs.digitalocean-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      hetzner: ${{ steps.hetzner.outputs.hetzner-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      acmedns: ${{ steps.acmedns.outputs.acmedns-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      alidns: ${{ steps.alidns.outputs.alidns-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
      dnspod: ${{ steps.dnspod.outputs.dnspod-out-of-date || steps.caddy-check.outputs.plugins-out-of-date }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: trigger all builds if there is a new caddy release or if requested
        if: ${{ github.event.inputs.trigger_all_builds == 'true' || needs.check-for-new-caddy-release.outputs.caddy == 'true' }}
        id: caddy-check
        run: |
          echo "plugins-out-of-date=true" >> $GITHUB_OUTPUT

      - name: Pull desec plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default
        id: desec
        run: sh commit-check.sh https://github.com/caddy-dns/desec desec-local.txt git-hashes/desec.txt desec-out-of-date

      - name: Pull cloudflare plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: cloudflare
        run: sh commit-check.sh https://github.com/caddy-dns/cloudflare cloudflare-local.txt git-hashes/cloudflare.txt cloudflare-out-of-date

      - name: Pull duckdns plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: duckdns
        run: sh commit-check.sh https://github.com/caddy-dns/duckdns duckdns-local.txt git-hashes/duckdns.txt duckdns-out-of-date

      - name: Pull route53 plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: route53
        run: sh commit-check.sh https://github.com/caddy-dns/route53 route53-local.txt git-hashes/route53.txt route53-out-of-date

      - name: Pull namecheap plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: namecheap
        run: sh commit-check.sh https://github.com/caddy-dns/namecheap namecheap-local.txt git-hashes/namecheap.txt namecheap-out-of-date

      - name: Pull digitalocean plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: digitalocean
        run: sh commit-check.sh https://github.com/caddy-dns/digitalocean digitalocean-local.txt git-hashes/digitalocean.txt digitalocean-out-of-date

      - name: Pull hetzner plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: hetzner
        run: sh commit-check.sh https://github.com/caddy-dns/hetzner hetzner-local.txt git-hashes/hetzner.txt hetzner-out-of-date

      - name: Pull acmedns plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: acmedns
        run: sh commit-check.sh https://github.com/caddy-dns/acmedns acmedns-local.txt git-hashes/acmedns.txt acmedns-out-of-date

      - name: Pull alidns plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: alidns
        run: sh commit-check.sh https://github.com/caddy-dns/alidns alidns-local.txt git-hashes/alidns.txt alidns-out-of-date

      - name: Pull dnspod plugin remote commits
        if: ${{ github.event.inputs.trigger_all_builds == 'false' || github.event.inputs.trigger_all_builds == '' && needs.check-for-new-caddy-release.outputs.caddy == 'false' }} #workaround, github inputs will be empty by default        
        id: dnspod
        run: sh commit-check.sh https://github.com/caddy-dns/dnspod dnspod-local.txt git-hashes/dnspod.txt dnspod-out-of-date

  trigger-desec-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.desec == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with desec dns plugin
      license: MIT
      tag: desec
      alpine_tag: desec-alpine
      go_plugin_link: github.com/caddy-dns/desec
      hash_file: git-hashes/desec.txt
      plugin_name: desec
      repo: https://github.com/caddy-dns/desec

  trigger-cloudflare-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.cloudflare == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with cloudflare dns plugin
      license: MIT
      tag: cloudflare
      alpine_tag: cloudflare-alpine
      go_plugin_link: github.com/caddy-dns/cloudflare
      hash_file: git-hashes/cloudflare.txt
      plugin_name: cloudflare
      repo: https://github.com/caddy-dns/cloudflare

  trigger-duckdns-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.duckdns == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with duckdns dns plugin
      license: MIT
      tag: duckdns
      alpine_tag: duckdns-alpine
      go_plugin_link: github.com/caddy-dns/duckdns
      hash_file: git-hashes/duckdns.txt
      plugin_name: duckdns
      repo: https://github.com/caddy-dns/duckdns

  trigger-route53-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.route53 == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with route53 dns plugin
      license: MIT
      tag: route53
      alpine_tag: route53-alpine
      go_plugin_link: github.com/caddy-dns/route53
      hash_file: git-hashes/route53.txt
      plugin_name: route53
      repo: https://github.com/caddy-dns/route53

  trigger-namecheap-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.namecheap == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with namecheap dns plugin
      license: MIT
      tag: namecheap
      alpine_tag: namecheap-alpine
      go_plugin_link: github.com/caddy-dns/namecheap
      hash_file: git-hashes/namecheap.txt
      plugin_name: namecheap
      repo: https://github.com/caddy-dns/namecheap

  trigger-digitalocean-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.digitalocean == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with digitalocean dns plugin
      license: MIT
      tag: digitalocean
      alpine_tag: digitalocean-alpine
      go_plugin_link: github.com/caddy-dns/digitalocean
      hash_file: git-hashes/digitalocean.txt
      plugin_name: digitalocean
      repo: https://github.com/caddy-dns/digitalocean

  trigger-hetzner-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.hetzner == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with hetzner dns plugin
      license: MIT
      tag: hetzner
      alpine_tag: hetzner-alpine
      go_plugin_link: github.com/caddy-dns/hetzner
      hash_file: git-hashes/hetzner.txt
      plugin_name: hetzner
      repo: https://github.com/caddy-dns/hetzner

  trigger-acmedns-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.acmedns == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with acmedns dns plugin
      license: MIT
      tag: acmedns
      alpine_tag: acmedns-alpine
      go_plugin_link: github.com/caddy-dns/acmedns
      hash_file: git-hashes/acmedns.txt
      plugin_name: acmedns
      repo: https://github.com/caddy-dns/acmedns

  trigger-alidns-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.alidns == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with alidns dns plugin
      license: MIT
      tag: alidns
      alpine_tag: alidns-alpine
      go_plugin_link: github.com/caddy-dns/alidns
      hash_file: git-hashes/alidns.txt
      plugin_name: alidns
      repo: https://github.com/caddy-dns/alidns

  trigger-dnspod-build:
    needs: check-for-plugin-updates
    if: ${{ needs.check-for-plugin-updates.outputs.dnspod == 'true' }}
    uses: FarisZR/caddy-dns-OCI/.github/workflows/start-build.yml@main
    permissions:
      packages: write
      contents: write
    with:
      dockerfile: Dockerfile
      dockerfile_alpine: Dockerfile-alpine
      image_title: Caddy with dnspod dns plugin
      license: MIT
      tag: dnspod
      alpine_tag: dnspod-alpine
      go_plugin_link: github.com/caddy-dns/dnspod
      hash_file: git-hashes/dnspod.txt
      plugin_name: dnspod
      repo: https://github.com/caddy-dns/dnspod